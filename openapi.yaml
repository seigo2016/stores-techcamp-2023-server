openapi: 3.0.3

info:
  title: POS
  version: 1.0.0
  description: POS API
  
servers:
  - url: "http://localhost:10080/"
    description: local

paths:
  "/items":
    get:
      operationId: getItems
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseItem"

  "/users":
    get:
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  "/users/{userId}":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    get:
      operationId: getUserById
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  "/users/{userId}/recommends":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    get:
      operationId: getUserRecommends
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseItems"

  "/orders/{userId}":
    parameters:
        - $ref: "#/components/parameters/userIdInPath"
    get:
      operationId: getOrders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOrder"
  "/orders":
    post:
      operationId: postOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestOrder"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOrder"

components:
  parameters:
    orderIdInPath:
      name: orderId
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/OrderId"
  
    userIdInPath:
      name: userId
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/UserId"

    itemIdInPath:
      name: itemId
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/ItemId"

  schemas:
    OrderId:
      type: string
      
    ItemId:
      type: string

    UserId:
      type: string

    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        name:
          type: string
      
    ResponseItems:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ResponseItem"

    ResponseItem:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ItemId"
        name:
          type: string
        price:
          type: integer
        preview:
          type: string
  
    RequestItem:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ItemId"
        quantity:
          type: integer
      
    RequestOrder:
      type: object
      properties:
        userId:
          $ref: "#/components/schemas/UserId"
        items:
          type: array
          items:
            $ref: "#/components/schemas/RequestItem"
    
    ResponseOrder:
      type: object
      properties:
        OrderId: 
          $ref: "#/components/schemas/OrderId"
        userId:
          $ref: "#/components/schemas/UserId"
        items:
          type: array
          items:
            $ref: "#/components/schemas/ResponseItem"
    